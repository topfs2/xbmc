/*std::string sample_fs = header_fs + "\n"
"#define WAVES 8.0\n"
"void main(void) {\n"
"	vec2 uv = -1.0 + 2.0 * gl_FragCoord.xy / iResolution.xy;\n"
"	float time = iGlobalTime * 1.0;\n"
"	vec3 color = vec3(0.0);\n"
"	for (float i=0.0; i<WAVES + 1.0; i++) {\n"
"		float freq = texture2D(iChannel0, vec2(i / WAVES, 0.0)).x * 7.0;\n"
"		vec2 p = vec2(uv);\n"
"		p.x += i * 0.04 + freq * 0.03;\n"
"		p.y += sin(p.x * 10.0 + time) * cos(p.x * 2.0) * freq * 0.2 * ((i + 1.0) / WAVES);\n"
"		float intensity = abs(0.01 / p.y) * clamp(freq, 0.35, 2.0);\n"
"		color += vec3(1.0 * intensity * (i / 5.0), 0.5 * intensity, 1.75 * intensity) * (3.0 / WAVES);\n"
"	}\n"
"	gl_FragColor = vec4(color, 1.0);\n"
"}";
*/
/*
std::string sample_fs = header_fs + "\n"
"vec3 COLOR1 = vec3(0.0, 0.0, 0.3);\n"
"vec3 COLOR2 = vec3(0.5, 0.0, 0.0);\n"
"float BLOCK_WIDTH = 0.01;\n"
"void main(void)\n"
"{\n"
"	vec2 uv = gl_FragCoord.xy / iResolution.xy;\n"
"	vec3 wave_color = vec3(0.0);\n"
"	float wave_width;\n"
"	uv  = -1.0 + 2.0 * uv;\n"
"	uv.y += 0.1;\n"
"	uv.x *= 2.;\n"
"	const float n = 20.;\n"
"	float prev = 0.;\n"
"	float curr = .6;\n"
"	float next = texture2D(iChannel0, vec2(0.,0.)).r;\n"
"	for(float i = 0.0; i < n; i++) {\n"
"		prev = curr;\n"
"		curr = next;\n"
"		next = texture2D(iChannel0, vec2((i+1.)/n,0.)).r;\n"
"		float a = max(0., curr * 2. - prev - next);\n"
"		uv.y += (1. * cos(mod(uv.x * 2. * i / n * 10. + iGlobalTime * i, 2.*3.14)) * a * a);\n"
"		uv.x += 0.1;\n"
"		wave_width = abs(1.0 / (200.0 * uv.y));\n"
"		wave_color += vec3(wave_width * 1.9, wave_width, wave_width * 1.5) * 5. / n;\n"
"	}\n"
"	gl_FragColor = vec4(wave_color, 1.0);\n"
"}\n";
*/
std::string sample_fs = header_fs + "\n"
"#ifdef GL_ES  \n"
"precision highp float;  \n"
"#endif  \n"
"float bump(float x) {\n"
"	return abs(x) > 1.0 ? 0.0 : 1.0 - x * x;\n"
"}\n"
"void main(void)\n"
"{\n"
"	vec2 uv = (gl_FragCoord.xy / iResolution.xy);\n"
"	float c = 3.0;\n"
"	vec3 color = vec3(1.0);\n"
"	color.x = bump(c * (uv.x - 0.75));\n"
"	color.y = bump(c * (uv.x - 0.5));\n"
"	color.z = bump(c * (uv.x - 0.25));\n"
"	float line = abs(0.01 / abs(0.5-uv.y) );\n"
"	uv.y = abs( uv.y - 0.5 );\n"
"	vec4 soundWave =  texture2D( iChannel0, vec2(abs(0.5-uv.x)+0.005, uv.y) );\n"
"	color *= line * (1.0 - 2.0 * abs( 0.5 - uv.xxx ) + pow( soundWave.y, 10.0 ) * 30.0 );\n"
"	gl_FragColor = vec4(color, 0.0);\n"
"}\n";
/*
std::string sample_fs = header_fs + "\n"
"void main(void)\n"
"{\n"
" vec2 uv = gl_FragCoord.xy / iResolution.xy;\n"
" vec3 color = texture2D(iChannel0, uv).rgb;\n"
" gl_FragColor = vec4(color, 1.0);\n"
"}";
*/
